INVERSE KINEMATICS WITH DUAL-QUATERNION
WhWeWaToDo:
1st: Move a simple arm model, with two bones, one of them anchored. 
  - Create the GIT repository.
  - Program the dual-quaternion (REF: Check Andy's class).
  - Program the bones-joints-arm structure -as a skeleton- (classes and so).
  - "Build" the arm (three degrees of freedom).
  - Program the inverse kinematics (mysterious box).
2nd: Add claw (and grab things?) and add other objects and table
  - Add the claw to the hand (not inverse kinematics).
  - Add objects to be grabbed.
  - Obtain the ray tracing thing.
3rd: Hanoi towers
  - Build the system.
---- dreaming starts here ----
4th: AI for Hanoi towers
5th: Dynamically application for skeleton (turning it into a library)
6th: Make a dude walk

Extra: 

ToDo:
Understand dual-quaternions & inverse kinematics.
Assemble it to do the 1st.

Things that we need to do:
- Dual-quaternion class
- Ray-tracing

Things to ask Andy:
Why the code notation of quaternions is "(x,y,z),w" instead of like the mathematical rotation "w,(x,y,z)"
Build the dual-quaternion class (based in Octet) 